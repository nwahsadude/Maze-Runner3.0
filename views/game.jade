doctype
html
    head
        title Maze Runner
        link(rel='stylesheet' href='/css/game.css')

        //Socket.io .. neddes to load before melon.js for some still unknown reason
        script(src='/socket.io/socket.io.js')

        //jQuery
        script(src='https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js')

        // MelonJS
        script(src='lib/melonJS-2.0.2.js')
        script(src='lib/plugins/debug/debugPanel.js')

        script(src='js/game.js')
        script(src='js/resources.js')
        script(src='js/audio.js')
        script(src='js/screens/play.js')
        script(src='js/entities/players.js')
        script(src='js/entities/projectiles.js')
        script(src='js/entities/HUD.js')
        script(src='js/entities/collectibles.js')
        script(src='js/entities/particles.js')

    body
        #container
            #screen
            #score
                h4="PLAYERS"
                ul#individualScores
                a#particleSwitch(href="#", onclick="particleManager.switchParticles()")="Disable Particles"
                h4="Controls"
                p w,a,s,d to move
                p mouse to aim
                p space to shoot


    script.
        window.onReady(function onReady() {
            var data = {id: "#{user.id}",
                        name: "#{user.username}"
            }
            console.log(data);
            var socket = io.connect();
            game.socket = socket;
            game.gameReady = function () {
                socket.emit('gameReady', {id: data.id, name: data.name});
            }

            game.onload();

            socket.on('playerId', function (playerId) {
                game.playerId = playerId;
            });

            socket.on('addPlayer', function (data) {
                game.addEnemy(data);
            });

            socket.on('addHealthEntity', function(data){
                game.addHealthEntity(data);
            });

            socket.on('addMainPlayer', function (data) {
                game.addMainPlayer(data);
            });

            socket.on('removePlayer', function (id) {
                if (game.playerId === id) {
                    window.location = '/';
                }
                game.removeEnemy(id);
            });

            socket.on('movePlayer', function (data) {
                game.movePlayer(data);
            });

            socket.on('fireProjectile', function (id, source, target) {
                game.fireNetworkBullet(id, source, target);
            });

            socket.on('remotePlayerHit', function (data) {
                game.remotePlayerHealthChanged(data);
            });

            socket.on('resetPlayer', function (data) {
                game.resetPlayer(data);
            });

            socket.on('removeHealthEntity', function (data) {
                game.disableHealthEntity(data);
            });

            socket.on('enableHealthEntity', function (data){
               game.enableHealthEntity(data);
            });
        });


